<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssm.OaManager.entity.User">

	<resultMap type="com.ssm.OaManager.entity.User" id="userMap">
		<id property="userId" column="user_id" />
		<result property="userName" column="user_name" />
		<result property="userPassword" column="user_password" />
		<result property="userEmail" column="user_email" />
		<result property="state" column="state" />
		<result property="code" column="code" />
		<!-- 员工 一对一关系配置 -->
		<association property="emp"
			resultMap="com.ssm.OaManager.entity.hrm.Employee.employeeMap"></association>
		<!-- 部门 -->
		<association property="dep"
			resultMap="com.ssm.OaManager.entity.hrm.Department.DeptInfoMap"></association>

		<collection property="roles"
			resultMap="com.ssm.OaManager.entity.privilege.Role.roleMap">
		</collection>

	</resultMap>

	<sql id="key">
		<!-- 去掉最后一个, -->
		<trim suffixOverrides=",">
			<if test="userName!=null">
				user_name,
			</if>
			<if test="userPassword!=null">
				user_password,
			</if>
			<if test="emp.empId!=null">
				emp_id,
			</if>
			<if test="userEmail!=null">
				user_email,
			</if>
			<if test="state!=null">
				state,
			</if>
			<if test="code!=null">
				code,
			</if>
		</trim>
	</sql>

	<sql id="value">
		<!-- 去掉最后一个, -->
		<trim suffixOverrides=",">
			<if test="userName!=null">
				#{userName},
			</if>
			<if test="userPassword!=null">
				#{userPassword},
			</if>
			<if test="emp.empId!=null">
				#{emp.empId},
			</if>
			<if test="userEmail!=null">
				#{userEmail},
			</if>
			<if test="state!=null">
				#{state},
			</if>
			<if test="code!=null">
				#{code},
			</if>
		</trim>
	</sql>
	<!-- 添加数据 -->
	<insert id="insertUser" useGeneratedKeys="true" keyProperty="userId"
		parameterType="com.ssm.OaManager.entity.User">
		insert into tb_user(
		<include refid="key" />
		) values(
		<include refid="value" />
		)
	</insert>

	<!-- 修改数据 -->
	<update id="update" parameterType="com.ssm.OaManager.entity.User">
		update tb_user
		<set>
			<if test="userName!=null">
				user_name= #{userName},
			</if>
			<if test="userPassword!=null">
				user_password=#{userPassword},
			</if>
			<if test="userEmail!=null">
				user_email=#{userEmail},
			</if>
			<if test="state!=null">
				state=#{state},
			</if>
			<if test="code!=null">
				code=#{code},
			</if>
		</set>
		where user_id = #{userId}
	</update>

	<!-- 删除一条数据 -->
	<delete id="deleteById" parameterType="java.io.Serializable">
		delete from tb_user where
		user_id=#{userId}
	</delete>

	<!-- 批量删除 -->
	<delete id="delete" parameterType="java.util.Map">
		delete from tb_user where user_id in
		<!-- foreach用于迭代数组元素 open表示开始符号 close表示结束符合 separator表示元素间的分隔符 item表示迭代的数组，属性值可以任意，但提倡与方法的数组名相同 
			#{ids}表示数组中的每个元素值 -->
		<foreach collection="ids" open="(" close=")" separator=","
			item="id">
			#{id}
		</foreach>
	</delete>

	<!--通过id查询一条数据 -->
	<select id="findById" parameterType="java.io.Serializable"
		resultMap="userMap">
		select * from tb_user u left join TB_Emplyee e on u.user_id
		=e.user_id left
		JOIN tb_department t on t.dept_id = e.dept_id left join
		tb_rumiddle ru
		on u.user_id = ru.user_id left join tb_role r on
		r.role_id =ru.role_id
		left join tb_rfmiddle m on r.role_id = m.role_id
		left join tb_function
		f
		on m.fun_id = f.fun_id
		where
		u.state = 1 
		and u.user_id=#{userId}
	</select>

	<!--通过激活码查询一条数据 -->
	<select id="findByCode" parameterType="com.ssm.OaManager.entity.User"
		resultMap="userMap">
		select user_id,code from tb_user where code=#{code}
	</select>

	<!--通过账号或邮箱查询一条数据 -->
	<select id="findByEmail" parameterType="com.ssm.OaManager.entity.User"
		resultMap="userMap">
		select u.user_id,u.user_name,u.user_password,
		u.user_email,u.state,u.code from tb_user u
		<where>
			<if test="userName!=null">
				and u.user_name=#{userName}
			</if>
			<if test="userEmail!=null">
				and user_email=#{userEmail}
			</if>
		</where>
	</select>


	<!--通过账号密码查询一条数据 -->
	<select id="findByNp" parameterType="com.ssm.OaManager.entity.User"
		resultMap="userMap">
		select * from tb_user u 
		inner join TB_Emplyee e on u.user_id = e.user_id 
		inner join tb_department t on t.dept_id = e.dept_id 
		inner join tb_position p on e.pos_id=p.pos_id 
		left join tb_rumiddle ru on u.user_id = ru.user_id 
		left join tb_role r on r.role_id =ru.role_id
		left join tb_rfmiddle m on r.role_id = m.role_id
		left join tb_function f on m.fun_id = f.fun_id
		where
		u.user_name=#{userName}
		<if test="userPassword!=null">
			and user_password=#{userPassword}
		</if>

	</select>

	<!-- 查询全部数据 -->
	<select id="findAll" resultMap="userMap">
		select
		* from
		tb_user u left join
		tb_emplyee e on u.emp_id = e.emp_id
		where
		u.state = 1 
	</select>

	<!-- 分页查询数据 -->
	<select id="findByPage" parameterType="com.ssm.OaManager.utils.PageBean"
		resultMap="userMap">
		select * from tb_user u 
		left join TB_Emplyee e on u.user_id =e.user_id
		left join tb_department t on t.dept_id = e.dept_id 
		left join tb_position p on e.pos_id = p.pos_id 
		left join tb_rumiddle ru on u.user_id = ru.user_id 
		left join tb_role r on r.role_id =ru.role_id
		left join tb_rfmiddle m on r.role_id = m.role_id
		left join tb_function f on m.fun_id = f.fun_id
		where 1=1
		and u.state = 1 
		<if test="paraMap.userId!=null">
			and u.user_id != #{paraMap.userId}
		</if>
		limit #{firstPage} ,#{pageSize}
	</select>

	<!-- 查询记录数 -->
	<select id="findCount" parameterType="com.ssm.OaManager.utils.PageBean"
		resultType="int">
		select
		count(*)
		from tb_user u
		where 1=1
		and u.state = 1
	</select>

	<!-- 添加数据 -->
	<insert id="inserRuMiddle" parameterType="com.ssm.OaManager.entity.RuMiddle">
		insert into
		tb_rumiddle(role_id,user_id) values(#{role.roleId},#{user.userId})
	</insert>

	<!-- 删除一条数据 -->
	<delete id="deleteByUserId" parameterType="java.io.Serializable">
		delete from
		tb_rumiddle where
		user_id=#{userId}
	</delete>

	<!-- 分页查询数据 -->
	<select id="findByDeptId" parameterType="com.ssm.OaManager.entity.User"
		resultMap="userMap">
		select *
		from tb_user u left join TB_Emplyee e on u.user_id
		=e.user_id left
		JOIN tb_department t on t.dept_id = e.dept_id left join
		tb_rumiddle ru
		on u.user_id = ru.user_id left join tb_role r on
		r.role_id =ru.role_id
		left join tb_rfmiddle m on r.role_id = m.role_id
		left join tb_function
		f
		on m.fun_id = f.fun_id
		where 1=1
		and u.state = 1
		and e.dept_id = #{dep.deptId}

	</select>
	<!-- 根据角色查询数据 <select id="findByRoleId" parameterType="java.io.Serializable" 
		resultMap="userMap"> select u.user_id,u.user_name,u.user_pass, u.real_name,u.user_img,u.user_sex, 
		u.user_mobil,u.user_base64, u.role_id from tb_user u where u.role_id=#{id} 
		</select> -->

	<!-- 修改权限 <update id="updatePrivilege" parameterType="com.ssm.OaManager.entity.User"> 
		update tb_user <set> <if test="role.roleId!=null"> role_id = #{role.roleId}, 
		</if> </set> where user_id = #{userId} </update> -->
</mapper>