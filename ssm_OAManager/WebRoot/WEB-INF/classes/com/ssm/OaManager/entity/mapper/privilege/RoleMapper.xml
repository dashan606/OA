<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssm.OaManager.entity.privilege.Role">
	<resultMap type="com.ssm.OaManager.entity.privilege.Role" id="roleMap">
		<id property="roleId" column="role_id" />
		<result property="roleName" column="role_name" />
		<result property="roleDescripti" column="role_descripti" />
<!-- 
		<collection property="users"
			resultMap="com.ssm.OaManager.entity.User.userMap" /> -->

		<collection property="functions"
			resultMap="com.ssm.OaManager.entity.privilege.Function.functionMap" />
	</resultMap>
	<sql id="key">
		<trim suffixOverrides=",">
			<if test="roleId!=null">
				role_id,
			</if>
			<if test="roleName!=null">
				role_name,
			</if>
			<if test="roleDescripti!=null">
				role_descripti,
			</if>
		</trim>
	</sql>
	<sql id="value">
		<trim suffixOverrides=",">
			<if test="roleId!=null">
				#{roleId},
			</if>
			<if test="roleName!=null">
				#{roleName},
			</if>
			<if test="roleDescripti!=null">
				#{roleDescripti},
			</if>
		</trim>
	</sql>

	<!-- 添加数据 -->
	<insert id="insert" parameterType="com.ssm.OaManager.entity.privilege.Role">
		insert into tb_role(
		<include refid="key" />
		) values(
		<include refid="value"></include>
		)
	</insert>

	<!-- 修改数据 -->
	<update id="update" parameterType="com.ssm.OaManager.entity.privilege.Role">
		update tb_role
		<set>
			<if test="roleName!=null">
				role_name = #{roleName},
			</if>
			<if test="roleDescripti!=null">
				role_descripti = #{roleDescripti},
			</if>
		</set>
		where role_id = #{roleId}
	</update>

	<!-- 根据ID删除 -->
	<delete id="deleteById" parameterType="java.io.Serializable">
		delete from tb_role where
		role_id = #{roleId}
	</delete>

	<!-- 批量删除 -->
	<delete id="delete" parameterType="java.util.Map">
		delete from tb_role where role_id in
		<!-- foreach用于迭代数组元素 
			open表示开始符号 
			close表示结束符合 
			separator表示元素间的分隔符 
			item表示迭代的数组，属性值可以任意，但提倡与方法的数组名相同 
			#{ids}表示数组中的每个元素值 -->
		<foreach collection="ids" open="(" close=")" separator=","
			item="id">
			#{id}
		</foreach>
	</delete>

	<!-- 根据ID查询 -->
	<select id="findById" parameterType="java.io.Serializable"
		resultMap="roleMap">
		select r.role_id,r.role_name,r.role_descripti,
		f.fun_id,f.fun_name,f.fun_url,f.fun_forbidden,f.fun_descripti 
		from tb_role r left join tb_rfmiddle m on r.role_id = m.role_id 
		left join tb_function f on m.fun_id = f.fun_id 
		where r. role_id = #{roleId}
	</select>

	<!-- 查询全部 -->
	<select id="findAll" resultMap="roleMap">
		select * from tb_role
	</select>

	<!-- 分页查询数据 -->
	<select id="findByPage" parameterType="com.ssm.OaManager.utils.PageBean"
		resultMap="roleMap">
		select r.role_id,r.role_name,r.role_descripti from tb_role r
		where 1=1  limit  #{firstPage} ,#{pageSize}
	</select>

	<!-- 查询记录数 -->
	<select id="findCount" parameterType="com.ssm.OaManager.utils.PageBean"
		resultType="int">
		select
		count(*)
		from tb_role r
	</select>
	
	<!-- 查询最大编号 -->
	<select id="findByMaxId" resultType="int">
		select
		max(role_id)
		from
		tb_role
	</select>
</mapper>
